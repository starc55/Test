const jsJuniorLevelTests = [
  // --- JavaScript boshlang'ich tushunchalar ---
  {
    question: "JavaScript dasturlash tili qaysi maqsadda yaratilgan?",
    option1: "Fayl tizimi boshqaruvi uchun",
    option2: "Statik sahifalar yaratish uchun",
    option3: "Veb sahifalarga interaktivlik qo‘shish uchun",
    option4: "Ma’lumotlar bazasi yaratish uchun",
    ans: 3,
  },
  {
    question: "JavaScript qaysi texnologiyalar bilan birga ishlaydi?",
    option1: "HTML va CSS",
    option2: "MySQL va PHP",
    option3: "Java va Kotlin",
    option4: "C++ va Assembly",
    ans: 1,
  },
  {
    question: "JavaScript kodini HTML faylga qanday qo‘shish mumkin?",
    option1: "Java fayl sifatida",
    option2: "`<js>` tegida",
    option3: "`<script>` tegida",
    option4: "`<code>` tegida",
    ans: 3,
  },
  {
    question: "`alert()` funksiyasi nima qiladi?",
    option1: "Ma’lumot so‘raydi",
    option2: "Oyna orqali xabar ko‘rsatadi",
    option3: "Elementni o‘zgartiradi",
    option4: "Stil qo‘shadi",
    ans: 2,
  },
  {
    question: "`let`, `const` va `var` orasidagi farq nimada?",
    option1: "Funktsiyadagi qiymati",
    option2: "Ularning ma’lumot turi",
    option3: "E’lon qilingan blokdagi yaroqlilik (scope)",
    option4: "Faqat `var` ishlatiladi",
    ans: 3,
  },

  // --- Ma'lumot turlari va operatorlar ---
  {
    question: "JavaScriptda primitiv ma’lumot turiga misol:",
    option1: "`Object`",
    option2: "`Function`",
    option3: "`Boolean`",
    option4: "`Array`",
    ans: 3,
  },
  {
    question: "Agar o‘zgaruvchiga qiymat berilmasa, u nimani qaytaradi?",
    option1: "0",
    option2: "null",
    option3: "undefined",
    option4: "false",
    ans: 3,
  },
  {
    question: "`5 + '5'` natijasi nima bo‘ladi?",
    option1: "10",
    option2: "‘10’",
    option3: "`55`",
    option4: "`undefined`",
    ans: 3,
  },
  {
    question: "`==` va `===` orasidagi farq nima? ",
    option1: "`===` faqat qiymatni solishtiradi",
    option2: "`==` faqat turini tekshiradi",
    option3: "`===` qiymat va turini solishtiradi",
    option4: "Ikkalasi ham ayni vazifani bajaradi",
    ans: 3,
  },
  {
    question: "`!true` ifodasi natijasi nima bo‘ladi?",
    option1: "true",
    option2: "false",
    option3: "null",
    option4: "0",
    ans: 2,
  },

  // --- Funksiyalar ---
  {
    question: "Funksiya nomini chaqirsangiz nima bo‘ladi?",
    option1: "Qiymat belgilanadi",
    option2: "Kod bajariladi",
    option3: "Ma’lumot chiqariladi",
    option4: "O‘zgaruvchi yaratiladi",
    ans: 2,
  },
  {
    question: "Funksiya nomi qanday bo‘lishi kerak?",
    option1: "Faqat raqam bo‘lishi mumkin",
    option2: "Kalit so‘zlardan iborat bo‘lishi kerak",
    option3:
      "Har qanday ism berilishi mumkin, lekin noto‘g‘ri belgilar bo‘lmasligi kerak",
    option4: "Faqat `function` bilan boshlanishi kerak",
    ans: 3,
  },
  {
    question: "Funksiyadan `return`siz chiqilsa nima bo‘ladi?",
    option1: "Qiymat `null` bo‘ladi",
    option2: "`undefined` qaytariladi",
    option3: "Xatolik yuz beradi",
    option4: "0 qaytariladi",
    ans: 2,
  },
  {
    question: "Arrow funksiyada `this` qanday ishlaydi?",
    option1: "Global `this`ni oladi",
    option2: "Har safar yangi `this` oladi",
    option3: "Element `this`ga bog‘liq bo‘ladi",
    option4: "`this` ishlamaydi",
    ans: 1,
  },
  {
    question: "Funksiyaga parametr qiymatlarini o‘zgartirish mumkinmi?",
    option1: "Yo‘q, doim o‘zgarmas bo‘ladi",
    option2: "Faqat sonlar uchun mumkin",
    option3: "Ha, istalgancha",
    option4: "Faqat `let` bilan e’lon qilingan bo‘lsa",
    ans: 3,
  },

  // --- Array va Obyektlar ---
  {
    question: "Massivni qanday bo‘sh holatda yaratasiz?",
    option1: "`[]`",
    option2: "`{}`",
    option3: "`new Object()`",
    option4: "`()`",
    ans: 1,
  },
  {
    question: "Massivdagi oxirgi elementga qanday murojaat qilinadi?",
    option1: "`arr[arr.length]`",
    option2: "`arr[-1]`",
    option3: "`arr[arr.length - 1]`",
    option4: "`arr.last()`",
    ans: 3,
  },
  {
    question: "Obyektga yangi qiymat qanday qo‘shiladi?",
    option1: "`obj.add(key, value)`",
    option2: "`obj[key] = value`",
    option3: "`obj -> key = value`",
    option4: "`obj.set(key, value)`",
    ans: 2,
  },
  {
    question: "`Object.values(obj)` nima beradi?",
    option1: "Kalitlar ro‘yxati",
    option2: "Qiymatlar ro‘yxati",
    option3: "Obyekt uzunligi",
    option4: "Xatolik",
    ans: 2,
  },
  {
    question: "`array.push(item)` nima qiladi?",
    option1: "Elementni o‘chiradi",
    option2: "Elementni boshiga qo‘shadi",
    option3: "Elementni oxiriga qo‘shadi",
    option4: "Massivni teskari qiladi",
    ans: 3,
  },

  // --- Asinxron kod ---
  {
    question: "`Promise` nimani ifodalaydi?",
    option1: "Massivni",
    option2: "Objektni",
    option3: "Kelajakdagi natijani",
    option4: "Funksiyani",
    ans: 3,
  },
  {
    question: "`await` operatori nima qiladi?",
    option1: "Kodni tezlashtiradi",
    option2: "Natijani kutadi",
    option3: "Massiv yaratadi",
    option4: "Obyekt o‘chiradi",
    ans: 2,
  },

  // --- Error Handling ---
  {
    question: "`catch` bloki qanday holatda ishlaydi?",
    option1: "Faqat `console.log` bo‘lsa",
    option2: "Agar `try` ichida xato bo‘lsa",
    option3: "Hech qachon ishlamaydi",
    option4: "Kod `alert` chiqarsa",
    ans: 2,
  },
  {
    question: "`try...catch...finally` qanday ishlaydi?",
    option1: "`finally` faqat `try` ishlamasa",
    option2: "`catch` faqat `finally`dan keyin",
    option3: "Har bir blok alohida ishlaydi",
    option4: "`finally` har doim bajariladi",
    ans: 4,
  },
  {
    question: "`Error` obyektini qanday yaratish mumkin?",
    option1: "`new Error('Xatolik')`",
    option2: "`error('Xatolik')`",
    option3: "`throw('Xatolik')`",
    option4: "`create Error('Xatolik')`",
    ans: 1,
  },
];

export default jsJuniorLevelTests;
